// SISTEMA DE GERENCIAMENTO DE BIBLIOTECA
// DEFININDO BIBLIOTECAS
#include <iostream>
#include <string>
using namespace std;

// DEFININDO STRUCT
struct Livros {
  // ATRIBUTOS DO STRUCT LIVROS
  string titulo;
  string autor;
  int numero_de_paginas;
  int ano_de_publicacao;
  int id;
  int quantidade;
  string nome_pessoas;
};

// FUNÇÃO PARA CADASTRO DE LIVROS
void cadastro_livros(Livros vetor[], int &cont) {
    // DEFININDO VARIÁVEIS
    int num;
    char continuar;

    do {
        // PEDINDO INFORMAÇÕES DO LIVRO
        cout << "Digite o titulo do livro (use '_' para espacos): ";
        cin >> vetor[cont].titulo;

        cout << "Digite o nome do autor (use '_' para espacos): ";
        cin >> vetor[cont].autor;

        // Validando o número de páginas
        do {
            cout << "Digite o numero de paginas: ";
            cin >> vetor[cont].numero_de_paginas;
            if (vetor[cont].numero_de_paginas <= 0) {
                cout << "Numero de paginas invalido. Deve ser maior que zero." << endl;
            }
        } while (vetor[cont].numero_de_paginas <= 0); // Repetir enquanto for inválido

        // Validando o ano de publicação
        do {
            cout << "Digite o ano de publicacao: ";
            cin >> vetor[cont].ano_de_publicacao;
            if (vetor[cont].ano_de_publicacao <= 0) {
                cout << "Ano de publicação inválido. Deve ser um número positivo." << endl;
            }
        } while (vetor[cont].ano_de_publicacao <= 0); // Repetir enquanto for inválido

        // VERIFICANDO SE O CÓDIGO JÁ EXISTE
        bool codigo_existe = false;
        do {
            cout << "Digite o codigo de identificacao do livro: ";
            cin >> vetor[cont].id;

            // VERIFICANDO SE O CÓDIGO JÁ EXISTE
            for (int i = 0; i < cont; i++) {
                if (vetor[i].id == vetor[cont].id) {
                    cout << "O código de identificação já existe! Digite um novo codigo." << endl;
                    codigo_existe = true;
                    break;
                } else {
                    codigo_existe = false;
                }
            }
        } while (codigo_existe); // repete até que um código único seja inserido

        // DEFININDO QUANTIDADE DE LIVROS DISPONÍVEIS E VALIDANDO O VALOR ENTRE 1 E 10
        do {
            cout << "Digite a quantidade disponivel (ate 10 unidades): ";
            cin >> vetor[cont].quantidade;
            if (vetor[cont].quantidade > 10 || vetor[cont].quantidade < 1) {
                cout << "Quantidade invalida, digite novamente: ";
            }
        } while (vetor[cont].quantidade > 10 || vetor[cont].quantidade < 1);

        cont++; // incrementa um livro no contador de livros

        // PERGUNTA SE DESEJA CONTINUAR CADASTRO DE LIVROS
        cout << "Deseja continuar inserindo um livro? (S || N): ";
        cin >> continuar;

        if (continuar == 'N' || continuar == 'n') {
            cout << "Livro cadastrado com sucesso!" << endl;
        }

    } while (continuar == 'S' || continuar == 's');
}


// FUNÇÃO PARA CONSULTAR OS LIVROS
void consultar_livro(Livros vetor[], int cont) {
  // VERIFICA SE NENHUM LIVRO FOI CADASTRADO AINDA
  if (cont == 0) {
    cout << "Nenhum livro foi cadastrado ainda!" << endl;
    return; // Encerra a função caso não haja livros cadastrados
  }

  // DEFININDO VARIÁVEIS
  int opcao;
  int codigo_de_identificacao;
  string titulo_identificacao;

  // MENU PARA CONSULTA
  cout << "Escolha uma opção para consulta:" << endl;
  cout << "(1) Listar todos os livros" << endl;
  cout << "(2) Consultar por código de identificação" << endl;
  cout << "(3) Consultar por título" << endl;
  cout << "Digite a sua opção: ";
  cin >> opcao;

  // MOSTRA TODOS OS LIVROS CADASTRADOS
  if (opcao == 1) {
    cout << "\nLista de livros cadastrados:" << endl;
    for (int i = 0; i < cont; i++) {
      cout << "Título: " << vetor[i].titulo << ", Autor: " << vetor[i].autor
           << ", Número de páginas: " << vetor[i].numero_de_paginas
           << ", Ano de publicação: " << vetor[i].ano_de_publicacao
           << ", ID: " << vetor[i].id
           << ", Quantidade: " << vetor[i].quantidade;

      // VERIFICA SE O LIVRO JÁ FOI EMPRESTADO
      if (vetor[i].nome_pessoas.empty()) { // empty() -> verifica se a string
                                           // está vazia
        cout << ", Não foi emprestado." << endl;
      } else {
        cout << ", Emprestimo: " << vetor[i].nome_pessoas << endl;
      }
    }
  }
  // CONSULTA POR CÓDIGO DE IDENTIFICAÇÃO
  else if (opcao == 2) {
    bool livro_encontrado = false;
    cout << "Digite o código de identificação: ";
    cin >> codigo_de_identificacao;
    for (int i = 0; i < cont; i++) {
      if (codigo_de_identificacao == vetor[i].id) {
        livro_encontrado = true;
        cout << "Título: " << vetor[i].titulo << ", Autor: " << vetor[i].autor
             << ", Número de páginas: " << vetor[i].numero_de_paginas
             << ", Ano de publicação: " << vetor[i].ano_de_publicacao
             << ", ID: " << vetor[i].id
             << ", Quantidade: " << vetor[i].quantidade;

        // VERIFICA SE O LIVRO JÁ FOI EMPRESTADO
        if (vetor[i].nome_pessoas.empty()) {
          cout << ", Não foi emprestado." << endl;
        } else {
          cout << ", Emprestimo: " << vetor[i].nome_pessoas << endl;
        }
        break;
      }
    }

    // MENSAGEM DE LIVRO NÃO ENCONTRADO
    if (!livro_encontrado) {
      cout << "Livro com o código de identificação não existe!" << endl;
    }
  }
  // CONSULTA POR TÍTULO
  else if (opcao == 3) {
    bool livro_encontrado = false;
    cout << "Digite o título: ";
    cin >> titulo_identificacao;

    // VERIFICA SE O LIVRO EXISTE COM O TÍTULO FORNECIDO
    for (int i = 0; i < cont; i++) {
      if (titulo_identificacao == vetor[i].titulo) {
        livro_encontrado = true;
        cout << "Título: " << vetor[i].titulo << ", Autor: " << vetor[i].autor
             << ", Número de páginas: " << vetor[i].numero_de_paginas
             << ", Ano de publicação: " << vetor[i].ano_de_publicacao
             << ", ID: " << vetor[i].id
             << ", Quantidade: " << vetor[i].quantidade;

        // VERIFICA SE O LIVRO JÁ FOI EMPRESTADO
        if (vetor[i].nome_pessoas.empty()) {
          cout << ", Nao foi emprestado." << endl;
        } else {
          cout << ", Emprestimo: " << vetor[i].nome_pessoas << endl;
        }
      }
    }

    // MENSAGEM DE LIVRO NÃO ENCONTRADO
    if (!livro_encontrado) {
      cout << "Livro com o título nao existe!" << endl;
    }
  } else {
    cout << "Opçao invalida! Tente novamente." << endl;
  }
}

// FUNÇÃO PARA EMPRÉSTIMO
void emprestimo_livro(Livros vetor[], int cont) {
  // VERIFICA SE NUNHUM LIVRO FOI CADASTRADO AINDA
  if (cont == 0) {
    cout << "Nenhum livro cadastrado ainda! Nao e possivel realizar o "
            "emprestimo!"
         << endl;
    return;
  }

  // DEFININDO VARIÁVEIS
  int codigo_de_identificacao;
  bool livro_encontrado = false; // verifica se o livro foi encontrado ou não
  int i;

  // SOLICITA CÓDIGO DE IDENTIFICAÇÃO
  cout << "Digite o codigo de identificacao do livro para empretimo: ";
  cin >> codigo_de_identificacao;

  // VERIFICA SE O LIVRO PODE SER EMPRESTADO
  for (i = 0; i < cont; i++) {
    if (codigo_de_identificacao == vetor[i].id) {
      livro_encontrado = true;       // livro foi encontrado, então o valor de
                                     // livro_encontrado passa a ser verdadeiro
      if (vetor[i].quantidade > 0) { // se a quantidade em estoque for maior que
                                     // zero, o livro pode ser emprestado
        cout << "Digite o nome da pessoa que está fazendo o emprestimo: ";
        cin >> vetor[i].nome_pessoas;
        vetor[i].quantidade--; // diminuindo a quantidade de livros disponíveis
        cout << "Emprestimo realizado com sucesso!" << endl;
        cout << "Titulo: " << vetor[i].titulo << ", Autor: " << vetor[i].autor
             << endl;
        cout << "Quantidade restante: " << vetor[i].quantidade << endl;
      } else {
        cout << "Livro indisponivel para emprestimo!" << endl;
      }
      break;
    }
  }

  // MENSAGEM DE LIVRO NÃO ENCONTRADO
  if (!livro_encontrado) {
    cout << "Livro nao encontrado!" << endl;
  }
}

// FUNÇÃO PARA REALIZAR DEVOLUÇÃO
void devolucao_livro(Livros vetor[], int cont) {
  // VERIFICA SE NENHUM LIVRO FOI CADASTRADO AINDA
  if (cont == 0) {
    cout << "Nenhum livro cadastrado ainda! Nao e possivel realizar a devolucao!" << endl;
    return;
  }

  // DEFININDO VARIÁVEIS
  int codigo_de_identificacao;
  bool livro_encontrado = false;

  // SOLICITA O CÓDIGO DE IDENTIFICAÇÃO DO LIVRO PARA DEVOLUÇÃO
  cout << "Digite o codigo de identificacao do livro para devolucao: ";
  cin >> codigo_de_identificacao;

  // INCREMENTA A QUANTIDADE DO LIVRO AO SER DEVOLVIDO
  for (int i = 0; i < cont; i++) {
    if (codigo_de_identificacao == vetor[i].id) {
      vetor[i].quantidade++; // incrementando mais um livro na quantidade
      vetor[i].nome_pessoas.clear(); // limpando o nome da pessoa que fez o empréstimo
      cout << "Devolucao realizada com sucesso!" << endl;
      cout << "Titulo: " << vetor[i].titulo << ", Autor: " << vetor[i].autor << endl;
      cout << "Quantidade atual: " << vetor[i].quantidade << endl;
      livro_encontrado = true;
      break;
    }
  }

  // MENSAGEM DE LIVRO NÃO ENCONTRADO
  if (!livro_encontrado) {
    cout << "Livro nao encontrado!" << endl;
  }
}


// FUNÇÃO PARA REMOLVER LIVRO
void remover_livro(Livros vetor[],
                   int &cont) { // valor de cont deve ser atualizado por isso &
  // VERIFICA SE NUNHUM LIVRO FOI CADASTRADO AINDA
  if (cont == 0) {
    cout << "Nenhum livro cadastrado ainda! Nao e possivel remover!" << endl;
    return;
  }

  // DEFININDO VARIÁVEIS
  int codigo_de_identificacao;
  int i;

  // SOLICITA O CÓDIGO DE IDENTIFICAÇÃO PARA REMOÇÃO
  cout << "Digite o codigo de identificacao do livro que deseja remolver: ";
  cin >> codigo_de_identificacao;

  bool livro_encontrado = false; // valor de bool é inicialmente false (o livro
                                 // ainda não foi encontrado)

  // PROCURA O LIVRO PARA REMOVÊ-LO
  for (i = 0; i < cont; i++) {
    if (vetor[i].id == codigo_de_identificacao) {
      livro_encontrado = true;    // valor de bool é marcado como true
      vetor[i] = vetor[cont - 1]; // o livro a ser removido é substituído pelo
                                  // último livro do vetor
      cont--; // o contador é decrementado, remolvendo o livro da ultima posição
              // do vetor
      cout << "Livro removido com sucesso!" << endl;
      break;
    }
  }

  // CASO O LIVRO NÃO TENHA SIDO ENCONTRADO
  if (!livro_encontrado) { // se bool for false
    cout << "Livro nao encontrado!" << endl;
  }
}

int main() {
  // DEFININDO VARIÁVEIS
  Livros vetor[100];
  int escolha;
  int cont = 0;

  do {
    // MENU INTERATIVO
    cout << " \n Menu de opcoes: " << endl;
    cout << "(1) Cadastro de livros " << endl;
    cout << "(2) Consulta de livros " << endl;
    cout << "(3) Emprestimo de livros " << endl;
    cout << "(4) Devolucao de livros " << endl;
    cout << "(5) Remocao de livros " << endl;
    cout << "(6) Sair " << endl;
    cout << "Qual opcao voce deseja: ";
    cin >> escolha;
    cout << " "<<endl;

    // CHAMANDO AS FUNÇÕES BASEADO NA ESCOLHA DO USUÁRIO
    switch (escolha) {
    case 1:
      cadastro_livros(vetor, cont);
      break;

    case 2:
      consultar_livro(vetor, cont);
      break;

    case 3:
      emprestimo_livro(vetor, cont);
      break;

    case 4:
      devolucao_livro(vetor, cont);
      break;

    case 5:
      remover_livro(vetor, cont);
      break;

    case 6:
      cout << "Saindo do programa..." << endl;
      break;

    default:
      cout << "Essa opcao nao existe!" << endl;
    }

  } while (escolha != 6);

  return 0;
}
